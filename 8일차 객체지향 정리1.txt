[객체지향 내용 정리]
클래스 : 객체를 만들기 위한 설계도. 필드부분과 메소드 부분으로 설계됨.
객체 : 클래스의 설계가 반영되어 실제 메모리가 할당된 독립적인 개체.
필드 : 멤버변수라고도 불리며 객체가 존재하는 동안 그안에 계속 유지되는 변수
메소드 : 함수. 명령어의 집합, 묶음. 객체 안에 존재하는 작은 부품.
	 참조변수를 이용해 호출할 때 실행됨.
-------------------------------------------------------------------------
[객체지향 특징]
1. 캡슐화(Encapsulation) : 데이터를 저장하는 변수와 문장의 집합인 메소드가
			   하나의 객체에 묶여 있는 성질.
2. 정보은닉(Information Hiding) : 객체의 상태정보를 저장하는 멤버변수에
			   객체 외부에서 접근하는 것을 막아서 객체가
			   잘못된 상태 정보를 가지게 되는걸 방지하는 기법.
			   멤버변수에 private 붙여놓기
			   참조변수를 이용하여 특정 데이터를 객체의 멤버
			   변수에 설정하거나 값을 확인하기 위해
			   접근자(getter)/설정자(setter)메소드 활용함.	
3. 상속 : 나중에
4. 다형성 : 나중에
------------------------------------------------------------------------
[메소드 오버로딩]
하나의 클래스 내부에 같은 이름의 메소드를 2개 이상 설계해 놓는 기법
!! 주의사항 : 반드시 매개변수 타입이나 갯수를 다르게 지정해야 함.
------------------------------------------------------------------------
가비지컬렉터 : new 키워드로 Heap 영역에 생성된 객체를 참조하는 변수가 
		하나도 존재하지 않는 경우 해당 객체를 소멸시키는 역할
------------------------------------------------------------------------
[생성자 메소드]
자바에서 객체를 생성하기 위해서는 반.드.시 생성자 메소드를 호출해야 한다.
(1) 생성자 메소드의 이름은 클래스 이름과 동일함(대소문자까지 완전)
(2) 반환형이 없음(당연히 메소드 내부에 return도 없음)
(3) 아예 작성하지 않거나 작성하기 시작하면 오버로딩을 많이 함.
(4) 클래스 설계시 생성자를 하나도 작성하지 않는다면 컴파일러가 몸통이
    비어있는 디폴트 생성자를 자동으로 끼워넣음.
(5) 보통은 다른 클래스에서 객체생성을 해야하므로 public으로 선언함
    - 특별한 경우(singleton패턴) private 하는 경우가 있긴 있음.
------------------------------------------------------------------------
[this 참조 변수의 용도]
(1) 생성자가 다른 생성자를 호출할 때.
(2) 메소드 실행시 잠깐 생성되는 지역변수(매개변수 포함)의 이름과
    객체내부의 멤버변수 이름이 겹치는 경우 멤버를 확실히 지칭할때 쓰임.
------------------------------------------------------------------------
[접근지정자]
private : 객체 내부의 멤버들만 접근 가능
(default) : 같은 패키지 내에선 public이나 마찬가지
public : 아무나 실행, 접근 가능.






